/*Practice: Password Validator
Instructions
Suppose you are building a simple password validator for a website. Let’s use what
we have learned about loops to verify the password.
Task
Write a program to prompt the user for a password. The password should meet all
these requirements:
● The password must be at least 8 characters long.
● The password must contain at least one uppercase letter.
● The password must contain at least one number.
● If the password does not meet all the requirements, the program should
keep asking the user for a new password until they provide a valid one.
Your application should:
● Use readlineSync.question() to prompt a user for input.
● Prompt a user to enter a password.
● Loop through the password to ensure that it meets the password
requirements, using the appropriate iteration statement(s) to do so. Make
sure you consider how iteration affects top-to-bottom execution of your code
and when a while or do-while loop would be more appropriate.
● Return one of the following statements:
○ If the password meets the requirements, a statement to let the user
know they have been successful
○ If the password does NOT meet the requirements, a statement to let
the user know their password does not meet the requirements
1
Setup
1. Make sure you install readline-sync following the instructions in the
Lesson: Values, Data Types, and Operations - 4.
2. For this activity, you will create your own repository to store your code:
1. Create a new repository.
2. Name it: practice-password-validator-[Your First Name]-[Your Last
Initial]
3. Make sure the repository is public.
4. Clone the repository to your local machine.
5. Start working on the code.
Submission
Submit the url for your GitHub repo in the field below.*/

//password validation coding:

const readline = require('readline-sync'); 

let password = '';
let isValid = false; 
while (!isValid) { 
password = readline.question('Create your password: ');
let hasUppercase = false;
let hasNumber = false;
if (password.length < 8) {
console.log('Password must be at least 8 characters long.');
continue; 
} 

for (let i = 0; i < password.length; i++) {
const char = password[i];
if (char >= 'A' && char <= 'Z') { 
hasUppercase = true;
}
if (char >= '0' && char <= '9') { 
hasNumber = true;
} 

if (hasUppercase && hasNumber) {
break;
}
} 

if (!hasUppercase) {
console.log('Password must contain at least one uppercase letter.');
} else if (!hasNumber) {
console.log('Password must contain at least one number.');
} else {
isValid = true; 
console.log('Password meets all requirements. Success!');
}
} 

